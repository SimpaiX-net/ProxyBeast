# ProxyBeast by @z3ntl3
# 
# This is a workflow to test CI/CD to build and deploy to github releases
#
# See more of our work at simpaix.net
#
# Licensed under GNU
# - You can find the license file within the root of this directory in a file named LICENSE

name: Wails Build & Deployment

on:
    pull_request:
        types: [opened, edited, reopened]
    push:
        branches: 
            - main
            - test-cd

jobs:
    build:
        continue-on-error: true
        strategy:
            matrix:
                version: [1.22, 1.23]
                os: [windows-latest, macos-latest] # currently only windows support for proxybeast
                architecture: 
                  - x64

        runs-on: ${{ matrix.os }}
        steps:
            - name: Clone Repo
              uses: actions/checkout@v4
            
            - name: Download Go
              uses: actions/setup-go@v5
              with: 
                go-version: ${{matrix.version}}
                architecture: ${{matrix.architecture}}
            
            - name: Install Node
              uses: actions/setup-node@v4
              with: 
                architecture: ${{ matrix.architecture }}

            - name: Install Go dependencies for Wails
              run: |
                go get .
                go install github.com/wailsapp/wails/v2/cmd/wails@latest

            - name: Wails Doctor
              run: wails doctor
            
            - name: Wails Build / mac-os & linux
              if: ${{ ! contains(matrix.os, 'windows') }}
              run: wails build

            - name: Download WINGET / windows
              if: ${{ contains(matrix.os, 'windows') }}
              uses: Cyberboss/install-winget@v1

            

            - name: Wails Build / windows
              if: ${{ contains(matrix.os, 'windows') }}
              run: wails build -nsis
            
            - name: Wails Release Build / windows
              uses: softprops/action-gh-release@v2
              if: startsWith(github.ref, 'refs/tags/') && contains(matrix.os, 'windows')
              with:
                files: /build/bin/*.exe
                prerelease: true
                

         
